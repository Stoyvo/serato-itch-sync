<?xml version="1.0" encoding="UTF-8"?>
<project name="serato-itch-sync" default="all">


    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- Modules -->


    <!-- Module ItchSync -->

    <dirname property="module.itchsync.basedir" file="${ant.file}"/>


    <property name="compiler.args.itchsync" value="${compiler.args}"/>

    <property name="itchsync.output.dir" value="${module.itchsync.basedir}/out/production/ItchSync"/>
    <property name="itchsync.testoutput.dir" value="${module.itchsync.basedir}/out/test/ItchSync"/>

    <path id="itchsync.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="itchsync.module.production.classpath"/>

    <path id="itchsync.runtime.production.module.classpath">
        <pathelement location="${itchsync.output.dir}"/>
    </path>

    <path id="itchsync.module.classpath">
        <pathelement location="${itchsync.output.dir}"/>
    </path>

    <path id="itchsync.runtime.module.classpath">
        <pathelement location="${itchsync.output.dir}"/>
        <pathelement location="${itchsync.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.itchsync">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.itchsync">
        <patternset refid="excluded.from.module.itchsync"/>
    </patternset>

    <path id="itchsync.module.sourcepath">
        <dirset dir="${module.itchsync.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="itchsync.module.test.sourcepath">
        <dirset dir="${module.itchsync.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.itchsync" depends="compile.module.itchsync.production,compile.module.itchsync.tests"
            description="Compile module ItchSync"/>

    <target name="compile.module.itchsync.production" description="Compile module ItchSync; production classes">
        <mkdir dir="${itchsync.output.dir}"/>
        <javac destdir="${itchsync.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" target="1.5">
            <compilerarg line="${compiler.args.itchsync}"/>
            <bootclasspath refid="itchsync.module.bootclasspath"/>
            <classpath refid="itchsync.module.production.classpath"/>
            <src refid="itchsync.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.itchsync"/>
        </javac>

        <copy todir="${itchsync.output.dir}">
            <fileset dir="${module.itchsync.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.itchsync.tests" depends="compile.module.itchsync.production"
            description="compile module ItchSync; test classes" unless="skip.tests">
        <mkdir dir="${itchsync.testoutput.dir}"/>
        <javac destdir="${itchsync.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" target="1.5">
            <compilerarg line="${compiler.args.itchsync}"/>
            <bootclasspath refid="itchsync.module.bootclasspath"/>
            <classpath refid="itchsync.module.classpath"/>
            <src refid="itchsync.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.itchsync"/>
        </javac>

        <copy todir="${itchsync.testoutput.dir}">
            <fileset dir="${module.itchsync.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.itchsync" description="cleanup module">
        <delete dir="${itchsync.output.dir}"/>
        <delete dir="${itchsync.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.itchsync" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.itchsync" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.itchsync" value="${basedir}/out/artifacts/itchsync"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.itchsync.jar" value="${artifacts.temp.dir}/itch-sync.jar"/>
    </target>

    <target name="artifact.itchsync" depends="init.artifacts" description="Build &apos;itchsync&apos; artifact">
        <property name="artifact.temp.output.itchsync" value="${artifacts.temp.dir}/itchsync"/>
        <mkdir dir="${artifact.temp.output.itchsync}"/>

        <jar destfile="${temp.jar.path.itchsync.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${itchsync.output.dir}"/>

            <manifest>
                <attribute name="Main-Class" value="Main"/>
            </manifest>
        </jar>
        <copy file="${temp.jar.path.itchsync.jar}" tofile="${artifact.temp.output.itchsync}/itch-sync.jar"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.itchsync" description="Build all artifacts">
        <mkdir dir="${artifact.output.itchsync}"/>
        <copy todir="${artifact.output.itchsync}">
            <fileset dir="${artifact.temp.output.itchsync}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>